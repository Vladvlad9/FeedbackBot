from aiogram import F, types, Bot
from aiogram.dispatcher.fsm.context import FSMContext
from aiogram.types import Message

from config import CONFIG
from crud import CRUDUsers, CRUDBots, CRUDChats
from keyboards.inline.users.formMain import MyCallback
from loader import dp
from states.users.mainState import UserStates


@dp.callback_query(MyCallback.filter())
async def main_forms(callback: types.CallbackQuery, callback_data: MyCallback, state: FSMContext):
    if callback_data.main == "AddBot":
        text = "–ß—Ç–æ–±—ã –ø–æ–¥–∫–ª—é—á–∏—Ç—å –±–æ—Ç, –≤–∞–º –Ω—É–∂–Ω–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –¥–≤–∞ –¥–µ–π—Å—Ç–≤–∏—è:\n\n" \
               "1. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ @BotFather –∏ —Å–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—ã–π –±–æ—Ç\n" \
               "2. –ü–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è –±–æ—Ç–∞ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ —Ç–æ–∫–µ–Ω (12345:6789ABCDEF) ‚Äî —Å–∫–æ–ø–∏—Ä—É–π—Ç–µ –∏ –Ω–∞–ø–∏—à–∏—Ç–µ –≤ —ç—Ç–æ—Ç —á–∞—Ç" \
               "/add_bot (–í–∞—à —Ç–æ–∫–µ–Ω)\n\n" \
               "–í–∞–∂–Ω–æ: –Ω–µ –ø–æ–¥–∫–ª—é—á–∞–π—Ç–µ –±–æ—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ —É–∂–µ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –¥—Ä—É–≥–∏–º–∏ —Å–µ—Ä–≤–∏—Å–∞–º–∏ " \
               "(Controller Bot, —Ä–∞–∑–Ω—ã–µ CRM –∏ —Ç.–¥.)"
        await callback.message.edit_text(text=text,
                                         reply_markup=await MyCallback.back_main_menu_ikb(target="BackMainMenu"))

    elif callback_data.main == "Statistics":
        get_all_user = await CRUDUsers.get_all()
        get_blocked_bot = await CRUDUsers.get_all(block=True)
        get_ban_bot = await CRUDUsers.get_all(ban=True)
        count_message_user = CONFIG.COUNTER.USER_MESSAGE
        count_message_admin = CONFIG.COUNTER.ADMIN_MESSAGE

        text = "üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–æ—Ç–∞\n\n" \
               f"üì§ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º : {count_message_user}\n" \
               f"üì• –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç–≤–µ—á–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º : {count_message_admin}\n\n" \
               f"‚ùóÔ∏è –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–µ–ª–æ–≤–µ–∫ –≤ –±–æ—Ç–µ : {len(get_all_user)}\n" \
               f"üö´ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–±–∞–Ω–µ–Ω—ã—Ö –≤ —á–∞—Ç–µ : {len(get_ban_bot)}\n" \
               f"‚ò†Ô∏è –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–µ–ª–æ–≤–µ–∫ –∫–æ—Ç–æ—Ä—ã–µ —É–¥–∞–ª–∏–ª–∏/–æ—Å—Ç–∞–Ω–æ–≤–∏–ª–∏ –±–æ—Ç–∞ : {len(get_blocked_bot)}\n\n" \
               f"<i>–°—á–µ—Ç—á–∏–∫ —Ç–µ—Ö, –∫—Ç–æ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –±–æ—Ç, –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è –ø–æ—Å–ª–µ –∫–∞–∂–¥–æ–π —Ä–∞—Å—Å—ã–ª–∫–∏.</i>"

        await callback.message.edit_text(text=text,
                                         reply_markup=await MyCallback.back_main_menu_ikb(target="BackMainMenu"),
                                         parse_mode="HTML")

    elif callback_data.main == "MyBots":
        my_bots = await CRUDBots.get_all(user_id=callback.from_user.id)
        all_bot = []
        # for i in my_bots:
        #     if i.bot_token != "None":
        #         all_bot.append(i)

        if my_bots:
            await callback.message.edit_text(text="–í—ã–±–µ—Ä–∏—Ç–µ –±–æ—Ç –∏–∑ —Å–ø–∏—Å–∫–∞ –Ω–∏–∂–µ.",
                                             reply_markup=await MyCallback.my_bots_ikb(
                                                 user_id=callback.from_user.id)
                                             )
        else:
            await callback.message.edit_text(text="–í—ã –Ω–µ –¥–æ–±–∞–≤–∏–ª–∏ –±–æ—Ç–æ–≤",
                                             reply_markup=await MyCallback.back_main_menu_ikb(target="BackMainMenu")
                                             )

    elif callback_data.main == "BackMainMenu":
        await callback.message.edit_text(text="–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ FeedBack Bot ‚Äì —ç—Ç–æ –±–æ—Ç –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏ –≤ Telegram",
                                         reply_markup=await MyCallback.main_menu_ikb(user_id=callback.from_user.id)
                                         )

    elif callback_data.main == "ShowBot":
        bot_name = callback_data.editId
        bot_id = int(callback_data.id)
        await callback.message.edit_text(text=f"–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–æ—Ç–æ–º https://t.me/{bot_name}",
                                         reply_markup=await MyCallback.settings_current_bot(bot_id=bot_id))

    elif callback_data.main == "BlockedUser":
        pass

    elif callback_data.main == "NewslettersBot":
        pass

    elif callback_data.main == "StatisticsBot":
        pass

    elif callback_data.main == "WelcomeText":
        bot_id = int(callback_data.id)
        await state.update_data(any_bot_id=bot_id)
        get_bot = await CRUDBots.get(id=bot_id)
        if get_bot:
            welcome_txt = get_bot.welcome_text
            if welcome_txt == "None":
                await callback.message.edit_text(text="–£ –≤–∞—Å –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω —Å—Ç–∞—Ä—Ç–æ–≤—ã–π —Ç–µ–∫—Å—Ç\n"
                                                      "–ñ–µ–ª–∞–µ—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π?",
                                                 reply_markup=await MyCallback.approve_ikb(user_id=callback.from_user.id,
                                                                                           bot_id=bot_id)
                                                 )
            else:
                await callback.message.edit_text(text="–í–∞—à —Å—Ç–∞—Ä—Ç–æ–≤—ã–π —Ç–µ–∫—Å—Ç:\n\n"
                                                      f"{welcome_txt}\n\n"
                                                      f"–ñ–µ–ª–µ–∞–µ—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π?",
                                                 reply_markup=await MyCallback.approve_ikb(user_id=callback.from_user.id,
                                                                                           bot_id=bot_id)
                                                 )
        else:
            await callback.message.edit_text(text="–ë–æ—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!",
                                             reply_markup=await MyCallback.back_main_menu_ikb(target="ShowBot")
                                             )

    elif callback_data.main == "AddChat":
        bot_id = int(callback_data.id)
        get_bot = await CRUDBots.get(id=bot_id)
        get_chat_bot = await CRUDChats.get(bot_id=get_bot.bot_id)
        if get_chat_bot:
            if get_chat_bot.chat_id == 1:
                await callback.message.edit_text(text="–≠—Ç–æ—Ç –±–æ—Ç –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω –≤ —á–∞—Ç—ã, "
                                                      "–ø–æ—ç—Ç–æ–º—É –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è –±—É–¥—É—Ç –ø—Ä–∏—Ö–æ–¥–∏—Ç—å –≤ –¥–∏–∞–ª–æ–≥ —Å –±–æ—Ç–æ–º.\n\n"
                                                      "–ß—Ç–æ–±—ã –ø–æ–¥–∫–ª—é—á–∏—Ç—å —á–∞—Ç ‚Äî –¥–æ–±–∞–≤—å—Ç–µ –±–æ—Ç "
                                                      "–∫–∞–∫ –Ω–æ–≤–æ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞.",
                                                 reply_markup=await MyCallback.back_main_menu_ikb(target="ShowBot"))
            else:
                my_bot = Bot(token=get_bot.bot_token)
                get_chat = await my_bot.get_chat(chat_id=f"<i>{get_chat_bot.chat_id}</i>")
                await callback.message.edit_text(text=f"–ë–æ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω –∫ –≥—Ä—É–ø–ø–µ: {get_chat.title}",
                                                 reply_markup=await MyCallback.back_main_menu_ikb(target="ShowBot",
                                                                                                  bot_id=bot_id),
                                                 parse_mode="HTML")
                print("yes")
        else:
            await callback.message.edit_text(text="–ë–æ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω!")

    elif callback_data.main == "AddWelcomeTxt":
        await callback.message.edit_text(text="–í–≤–µ–¥–∏—Ç–µ —Ç–µ—Å—Ç")
        await state.set_state(UserStates.AddWelcomeTxt)


